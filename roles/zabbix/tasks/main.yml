---
- name: Install MySQL server (if not already installed)
  apt:
    name: mysql-server
    state: present
    update_cache: yes

- name: Ensure MySQL service is running and enabled
  service:
    name: mysql
    state: started
    enabled: yes

- name: Install PyMySQL (Python MySQL module)
  apt:
    name: python3-pymysql
    state: present
    update_cache: yes

- name: Configure Ansible to use PyMySQL
  set_fact:
    ansible_python_interpreter: /usr/bin/python3

- name: Change MySQL root authentication method to mysql_native_password
  shell: |
    sudo mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}'; FLUSH PRIVILEGES;"

- name: Create .my.cnf for MySQL root access
  copy:
    dest: /root/.my.cnf
    content: |
      [client]
      user=root
      password={{ mysql_root_password }}
    mode: '0600'

- name: Download Zabbix repository package
  get_url:
    url: https://repo.zabbix.com/zabbix/7.2/release/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.2+ubuntu24.04_all.deb
    dest: /tmp/zabbix-release_latest_7.2+ubuntu24.04_all.deb
    mode: '0644'

- name: Install Zabbix repository package
  apt:
    deb: /tmp/zabbix-release_latest_7.2+ubuntu24.04_all.deb
    state: present

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Zabbix server, frontend, and agent
  apt:
    name:
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-apache-conf
      - zabbix-sql-scripts
      - zabbix-agent
    state: present
    update_cache: yes

- name: Create Zabbix database
  community.mysql.mysql_db:
    name: zabbix
    encoding: utf8mb4
    collation: utf8mb4_bin
    state: present

- name: Create Zabbix database user
  community.mysql.mysql_user:
    name: zabbix
    host: localhost
    password: "{{ zabbix_db_password }}"
    priv: "zabbix.*:ALL"
    state: present

- name: Vérifier si la base de données Zabbix contient des tables
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_db: zabbix
    query: "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'zabbix';"
  register: zabbix_tables
  ignore_errors: yes

- name: Set global log_bin_trust_function_creators to 1
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    query: "SET GLOBAL log_bin_trust_function_creators = 1;"

- name: Importer le schéma de base de données Zabbix (si nécessaire)
  shell: |
    zcat /usr/share/doc/zabbix-sql-scripts/mysql/create.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p{{ zabbix_db_password }} zabbix
  when: zabbix_tables is not failed and zabbix_tables.query_result[0][0] == 0

- name: Importer les données initiales de Zabbix (si nécessaire)
  shell: |
    zcat /usr/share/zabbix/sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p{{ zabbix_db_password }} zabbix
  when: zabbix_tables is not failed and zabbix_tables.query_result[0][0] == 0

- name: Set global log_bin_trust_function_creators to 0
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    query: "SET GLOBAL log_bin_trust_function_creators = 0;"

- name: Configure Zabbix server database password
  lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    regexp: '^DBPassword='
    line: 'DBPassword={{ zabbix_db_password }}'
    state: present

- name: Ensure Zabbix services are running and enabled
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop:
    - zabbix-server
    - zabbix-agent
    - apache2
